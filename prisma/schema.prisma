generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int           @id @default(autoincrement())
  email                   String        @unique
  username                String        @unique
  password                String
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  phone_num               String        @unique
  isVerified              Boolean       @default(false)
  verificationToken       String?
  verificationTokenExpiry DateTime?
  role                    String        @default("user")
  orders                  Order[]
  testimonials            Testimonial[]
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  image       String?
  products    Product[]
}

model Product {
  id          String      @id @default(cuid())
  createdBy   String
  name        String
  categoryId  String
  price       Decimal
  discount    Decimal
  stock       Int
  description String
  tags        String
  featured    Boolean     @default(false)
  slug        String      @unique
  images      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id])
}

model Order {
  id              String      @id @default(cuid())
  userId          Int
  customerName    String
  customerEmail   String
  customerPhone   String?
  shippingAddress String
  total           Decimal
  status          String      @default("pending")
  paymentStatus   String      @default("pending")
  trackingNumber  String?
  orderDate       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  paymentId       String?
  razorpayOrderId String?
  user            User        @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Testimonial {
  id          String   @id @default(cuid())
  userId      Int
  productName String?
  orderId     String?
  rating      Int
  comment     String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}
