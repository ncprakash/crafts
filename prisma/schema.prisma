// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  username   String   @unique
  password   String
  phone_num  String   @unique
  isVerified Boolean  @default(false)
  verificationToken String?
  verificationTokenExpiry DateTime?
  role       String   @default("user") // user, admin
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  orders     Order[]
  testimonials Testimonial[]
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  image       String?  // URL or path to category image
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  products    Product[]
}

model Product {
  id          String   @id @default(cuid())
  createdBy   String
  name        String
  categoryId  String
  price       Decimal
  discount    Decimal
  stock       Int
  description String
  tags        String
  featured    Boolean  @default(false)
  slug        String   @unique
  images      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  category    Category @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
}

model Order {
  id              String   @id @default(cuid())
  userId          Int
  customerName    String
  customerEmail   String
  customerPhone   String?
  shippingAddress String
  total           Decimal
  status          String   @default("pending") // pending, processing, shipped, delivered, cancelled
  paymentStatus   String   @default("pending") // pending, paid, failed
  paymentId       String?  // Razorpay payment ID
  razorpayOrderId String?  // Razorpay order ID
  trackingNumber  String?
  orderDate       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  user            User     @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal
  
  // Relations
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Testimonial {
  id            String   @id @default(cuid())
  userId        Int
  productName   String?
  orderId       String?
  rating        Int      // 1-5 stars
  comment       String
  status        String   @default("pending") // pending, approved, rejected
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  user          User     @relation(fields: [userId], references: [id])
}